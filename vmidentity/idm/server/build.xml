<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2011 VMware, Inc. All rights reserved.
-->
<project name="vmware-identity-idm-server" default="build" basedir=".">

   <property name="target-sets" value="main,test" />

   <property name="LOG4J2" value="${basedir}/../../diagnostics/lib" />

   <!-- SSO Admin Server manifest properties -->
   <property name="vmware-identity-idm-server.title" value="VMware Identity Management Service" />
   <property name="vmware-identity-idm-server.version" value="2.0.0.${BUILD_NUMBER}" />
   <property name="vmware-identity-idm-server.vendor" value="VMWare, Inc." />

   <property file="../product.properties" />
   <property name="MAINSRCROOT" value="${basedir}/../.."/>
   <property name="buildRoot" value="${MAINSRCROOT}/build/${PRODUCT_NAME}"/>
   <property name="vmafd.classpath" value="${VMAFD_CLASSPATH}" />

   <import file="${MAINSRCROOT}/build/ant/presets.xml" />
   <import file="${MAINSRCROOT}/build/ant/defaults.xml" />

   <property name="build.packages.vmware-identity-platform"
             value="${build.packages}/vmware-identity-platform.jar" />

   <property name="build.packages.vmware-identity-idm-interface"
             value="${build.packages}/vmware-identity-idm-interface.jar" />

   <property name="build.packages.vmware-identity-diagnostics"
             value="${build.packages}/vmware-identity-diagnostics.jar" />

   <property name="build.packages.platform"
             value="${build.packages}/platform.jar" />

   <property name="manifest_mf" value="MANIFEST.MF" />
   <property name="src.main.resources.manifest_mf" value="${src.main.resources}/${manifest_mf}"
             description="Instructs the 'package' task to use this manifest file." />

   <path id="classpath.main">
      <pathelement location="${build.packages.vmware-identity-platform}" />
      <pathelement location="${build.packages.vmware-identity-idm-interface}" />
      <pathelement location="${build.packages.vmware-identity-diagnostics}" />
      <pathelement location="${build.packages.platform}" />

      <pathelement location="${vmafd.classpath}" />
      <fileset refid="jar-set.apache-commons-logging" />
      <fileset refid="jar-set.LOG4J2" />
      <fileset refid="jar-set.apache-commons-lang"/>
      <fileset refid="jar-set.apache-commons-daemon"/>
      <fileset refid="jar-set.bouncy-castle" />
      <fileset refid="jar-set.jna" />
      <fileset refid="jar-set.commons-codec" />
   </path>

    <path id="classpath.test">
        <path refid="classpath.main" />
        <pathelement location="${build.packages.main}"/>
        <fileset refid="jar-set.junit" />
        <fileset refid="jar-set.apache-commons-lang" />
    </path>

    <import file="${MAINSRCROOT}/build/ant/buildcycle-template.xml" />

   <target name="idmserver.start">
      <java classname="com.vmware.identity.idm.server.IdmServer" fork="true" spawn="true" jvmargs="-Djava.rmi.server.codebase='file:///${build.packages.vmware-identity-idm-interface} file:///${build.packages}/${ant.project.name}.jar file:///${build.packages.vmware-identity-platform}' -Djava.security.policy=file:///${buildRoot}/${ant.project.name}/classes/server.policy">
         <classpath>
            <fileset dir="${buildRoot}/packages">
              <include name="**/vmware-identity-idm-*.jar"/>
	      <exclude name="**/*-src.jar"/>
            </fileset>
            <fileset dir="${LOG4J2}" includes="*.jar"/>
         </classpath>
         <classpath location="${tcRoot}/noarch/apache-commons-lang-2.5/commons-lang-2.5.jar"/>
         <classpath location="${tcRoot}/noarch/apache-commons-codec-1.4/commons-codec-1.4.jar"/>
         <classpath>
            <fileset dir="${tcRoot}/noarch/jna-3.5.1">
               <include name="jna.jar"/>
               <include name="platform.jar"/>
             </fileset>
         </classpath>
      </java>
   </target>

   <target name="idmserver.stop">
     <!--Try to find process id by classname -->
      <exec executable="${env.JAVA_HOME}/bin/jps" output="jps.log"/>
      <loadfile srcfile="jps.log" property="pid.out">
         <filterchain>
	    <linecontains>
               <contains value="IdmServer"/>
            </linecontains>
            <tokenfilter>
               <deletecharacters chars="IdmServer"/>
               <trim/>
               <ignoreblank/>
            </tokenfilter>
            <striplinebreaks/>
         </filterchain>
       </loadfile>
       <echo>IdmServer instance PID - "${pid.out}"</echo>
       <delete file="jps.log"/>
      <exec executable="kill" os="Linux" spawn="true">
        <arg value="${pid.out}"/>
      </exec>
      
     <!--Try to find process id by jar name-->
      <exec executable="${env.JAVA_HOME}/bin/jps" output="jps.log">
	<arg value="-l"/>
      </exec>
     <loadfile srcfile="jps.log" property="pid.out">
         <filterchain>
	    <linecontains>
               <contains value="vmware-identity-idm-server.jar"/>
            </linecontains>
            <tokenfilter>
               <deletecharacters chars="vmware-identity-idm-server.jar"/>
               <trim/>
               <ignoreblank/>
            </tokenfilter>
            <striplinebreaks/>
         </filterchain>
       </loadfile>
       <echo>IdmServer instance PID - "${pid.out}"</echo>
       <delete file="jps.log"/>
      <exec executable="kill" os="Linux" spawn="true">
        <arg value="${pid.out}"/>
      </exec>
      
   </target>

   <target name="rmiregistry.start" depends="is.rmiregistry.running" unless="pid.out">
      <echo>Make sure you have JAVA_HOME set!</echo>
      <echo>JAVA_HOME=${env.JAVA_HOME}</echo>
      <exec executable="${env.JAVA_HOME}/bin/rmiregistry" spawn="true"/>
   </target>	

   <target name="rmiregistry.stop" depends="is.rmiregistry.running" if="pid.out">
      <exec executable="kill" os="Linux" spawn="true">
        <arg value="${pid.out}"/>
     </exec>
     <!--TODO: kill a running process on windows -->
   </target>	

   <target name="is.rmiregistry.running">
      <!--TODO: this code is the same as idmserver.stop target. Fix code duplication -->
      <echo>Make sure you have JAVA_HOME set!</echo>
      <echo>JAVA_HOME=${env.JAVA_HOME}</echo>
      <exec executable="${env.JAVA_HOME}/bin/jps" output="jps.log"/>
      <loadfile srcfile="jps.log" property="pid.out">
         <filterchain>
	    <linecontains>
               <contains value="RegistryImpl"/>
            </linecontains>
            <tokenfilter>
               <deletecharacters chars="RegistryImpl"/>
               <trim/>
               <ignoreblank/>
            </tokenfilter>
            <striplinebreaks/>
         </filterchain>
       </loadfile>
       <echo>Rmiregisty instance PID - "${pid.out}"</echo>
       <delete file="jps.log"/>
   </target>

</project>
