#!/bin/bash

############################################################################################################
# A shell script to instantiate tomcat runtime instance for Secure Token Service (STS). This script        #
# copies the necessary libraries and other configuration files from ${catalina.home} tp ${catalina.base}.  #
# 													   #
# Author : Balaji Boggaram Ramanarayan                                                                     #
#				                                                                           # 	                                        
############################################################################################################

VMWARE_STS_INSTANCE_NAME=vmware-sts
VMWARE_HOME=@VMSTS_PREFIX_DIR@
VMWARE_JARS=$VMWARE_HOME/jars
VMWARE_WEBAPPS=$VMWARE_HOME/webapps
VMWARE_STS_CONF=$VMWARE_HOME/share/config/sts
VMWARE_VECS_CLI=$VMWARE_HOME/bin/vecs-cli
OPENSSL=/usr/bin/openssl

VMWARE_STS_INSTANCE=$VMWARE_HOME/$VMWARE_STS_INSTANCE_NAME
VMWARE_STS_LOGS=/var/log/vmware/sso

# Tomcat Binary location
TOMCAT_HOME=@TOMCAT_HOME@

VMWARE_STS_INSTANCE_BIN=$VMWARE_STS_INSTANCE/bin
VMWARE_STS_INSTANCE_CONF=$VMWARE_STS_INSTANCE/conf
VMWARE_STS_INSTANCE_LIB=$VMWARE_STS_INSTANCE/lib
VMWARE_STS_INSTANCE_LOGS=$VMWARE_STS_INSTANCE/logs
VMWARE_STS_INSTANCE_TEMP=$VMWARE_STS_INSTANCE/temp
VMWARE_STS_INSTANCE_WEBAPPS=$VMWARE_STS_INSTANCE/webapps
VMWARE_STS_INSTANCE_WORK=$VMWARE_STS_INSTANCE/work

# Create tomcat runtime instance(vmware-sts) for STS (Secure Token Service)
echo "Creating vmware-sts tomcat instance : $VMWARE_STS_INSTANCE"
mkdir -p $VMWARE_STS_INSTANCE

# Create tomcat directories under tomcat run time instance 
## Create bin, conf, lib. logs, temp, webapps and work directories
mkdir $VMWARE_STS_INSTANCE_BIN
mkdir $VMWARE_STS_INSTANCE_CONF
mkdir $VMWARE_STS_INSTANCE_LIB
mkdir $VMWARE_STS_INSTANCE_LOGS
mkdir $VMWARE_STS_INSTANCE_TEMP
mkdir $VMWARE_STS_INSTANCE_WEBAPPS
mkdir $VMWARE_STS_INSTANCE_WORK

# Configure tomcat runtime instance

## Configure Tomcat SSL 
### Integrate VECS based SSL certificate 
cp $VMWARE_JARS/vmware-identity-tomcat-extensions.jar $VMWARE_STS_INSTANCE_BIN
OUT=$?
if [ ${OUT} -ne 0 ]; then
        exception "Failed to copy vmware-identity-tomcat-extensions.jar to $VMWARE_STS_INSTANCE_BIN";
fi

##  Copy configuration to conf
declare -a catalinaConfFiles=("tomcat-users.xml" "context.xml" "catalina.policy")
for i in "${catalinaConfFiles[@]}"
do
    echo "Copying $TOMCAT_HOME/conf/$i to $VMWARE_STS_INSTANCE_CONF"
    cp $TOMCAT_HOME/conf/$i $VMWARE_STS_INSTANCE_CONF
    OUT=$?
    if [ ${OUT} -ne 0 ]; then
        exception "Failed to copy : $TOMCAT_HOME/$i";
    fi
done

declare -a confFiles=("server.xml" "web.xml" "catalina.properties" "logging.properties")
for i in "${confFiles[@]}"
do
   echo "Copying $VMWARE_STS_CONF/$i to $VMWARE_STS_INSTANCE_CONF "
   cp $VMWARE_STS_CONF/$i $VMWARE_STS_INSTANCE_CONF/
   OUT=$?
   if [ ${OUT} -ne 0 ]; then
        exception "Failed to copy : $VMWARE_STS_CONF/$i";
   fi
done

## Deploy war files to webapps
declare -a stsWebApps=("openidconnect.war" "websso.war" "sts.war" "idm.war" "afd.war")
for i in "${stsWebApps[@]}"
do
   echo "Copying $VMWARE_WEBAPPS/$i to $VMWARE_STS_INSTANCE_WEBAPPS "
   cp $VMWARE_WEBAPPS/$i $VMWARE_STS_INSTANCE_WEBAPPS/
   OUT=$?
   if [ ${OUT} -ne 0 ]; then
        exception "Failed to deploy : $VMWARE_WEBAPPS/$i";
   fi
done

## Set tomcat environmental properties
### Copy setenv.sh to bin 
cp $VMWARE_STS_CONF/setenv.sh $VMWARE_STS_INSTANCE_BIN
OUT=$?
if [ ${OUT} -ne 0 ]; then
        exception "Failed to copy setenv.sh to $VMWARE_STS_INSTANCE_BIN";
fi


### Copy tomcat-juli.jar to bin
cp $TOMCAT_HOME/bin/tomcat-juli.jar $VMWARE_STS_INSTANCE_BIN
OUT=$?
if [ ${OUT} -ne 0 ]; then
        exception "Failed to copy tomcat-juli.jar to $VMWARE_STS_INSTANCE_BIN";
fi

function exception() {
  echo $1;
}
