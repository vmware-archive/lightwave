#!/bin/bash

LW_BIN_DIR=/opt/likewise/bin
LW_SBIN_DIR=/opt/likewise/sbin
LW_DEFAULT_VERSION="1.3.0"
LW_KEY="[HKEY_THIS_MACHINE\\Services\\lw-server]"

_get_lw_version(){

    LW_VERSION=`rpm -qid lightwave-server | grep -i Version | cut -d ':' -f2 | tr -d '[[:space:]]'`

    if [ -z $LW_VERSION ]; then
        LW_VERSION=$LW_DEFAULT_VERSION
    fi
}

_get_installed_version(){

    INSTALLED_VERSION=`$LW_BIN_DIR/lwregshell list_values "$LW_KEY" | \
        grep 'Version' | sed 's/+//' | cut -d '"' -f4`
}

_set_installed_version(){

    # Does key exist?
    $LW_BIN_DIR/lwregshell list_keys "[HKEY_THIS_MACHINE\\Services]" | grep 'lw-server' &>/dev/null

    # Key doesn't exist, create it
    if [ $? -ne 0 ]; then
        $LW_BIN_DIR/lwregshell add_key '[HKEY_THIS_MACHINE\Services\lw-server]'
    fi

    # Does value exist?
    $LW_BIN_DIR/lwregshell list_values "$LW_KEY" | grep 'Version' &>/dev/null

    # If value doesn't exist, create it. Otherwise, set it.
    if [ $? -ne 0 ]; then
        #Add Value
        $LW_BIN_DIR/lwregshell add_value $LW_KEY "Version" REG_SZ "$LW_VERSION"
    else
        #Set Value
        $LW_BIN_DIR/lwregshell set_value $LW_KEY "Version" "$LW_VERSION"
    fi
}

_exit(){
    if [ $RUN_LWSM ]; then
        $LW_BIN_DIR/lwsm shutdown

        while [ `pidof lwsmd` ];  do
            sleep 1
        done
    fi

    exit $1
}

#
# Main
#

AWK=
if [ -x /bin/awk ]; then
    AWK=/bin/awk
elif [ -x /usr/bin/awk ]; then
    AWK=/usr/bin/awk
fi

if [ -z "$AWK" ]; then
    echo "Error: A suitable version of [awk] could not be found"
    exit 1
fi

# Default parameters
LOTUS_DEPLOYMENT=standalone
LOTUS_DOMAIN_DEFAULT=lightwave.local
LOTUS_ADMIN_DEFAULT=Administrator
LOTUS_ADMIN_PASSWORD_DEFAULT=
LOTUS_PARTNER_HOSTNAME=
LOTUS_SITE_NAME=Default-first-site
LOTUS_HOSTNAME=
LOTUS_DNS_FORWARDERS=
LOTUS_SSL_SUBJECT_ALT_NAME=
DISABLE_DNS=0
DISABLE_STS=0
USAGE="configure-lightwave-server --password <password> [--domain <domain-name>] [--server <partner-host-name>] [--site <site-name>] [--hostname <hostname | IP Address>] [--dns-forwarders <comma-separated list of IP Addresses>] [--ssl-subject-alt-name <SSL Subject Alternative Name>] [--disable-dns] [--disable-sts] [--config-file <configuration file>]"
export SUPPORT_RHTTP_PROXY=0

# Read passed parameters.
if [ $# -gt 0 ]; then

   MODE="open"

   for arg in "$@"
   do
        case "$MODE" in
            "open")
                case "$arg" in
                    "--domain")
                      MODE="domain"
                      ;;
                    "--password")
                      MODE="password"
                      ;;
                    "--server")
                      LOTUS_DEPLOYMENT=partner
                      MODE="server"
                      ;;
                    "--site")
                      MODE="site"
                      ;;
                    "--hostname")
                      MODE="hostname"
                      ;;
                    "--config-file")
                      MODE="config-file"
                      ;;
                    "--dns-forwarders")
                      MODE="dns-forwarders"
                      ;;
                    "--ssl-subject-alt-name")
                      MODE="ssl-subject-alt-name"
                      ;;
                    "--disable-dns")
                      DISABLE_DNS=1
                      ;;
                    "--disable-sts")
                      DISABLE_STS=1
                      ;;
                    *)
                      echo "Invalid parameter : $arg"
                      echo $USAGE
                      exit 1
                      ;;
                esac
                ;;
             "domain")
                LOTUS_DOMAIN_DEFAULT=$arg
                MODE=open
                ;;
             "password")
                LOTUS_ADMIN_PASSWORD_DEFAULT=$arg
                MODE=open
                ;;
             "server")
                LOTUS_PARTNER_HOSTNAME=$arg
                MODE=open
                ;;
             "site")
                LOTUS_SITE_NAME=$arg
                MODE=open
                ;;
             "hostname")
                LOTUS_HOSTNAME=$arg
                MODE=open
                ;;
             "dns-forwarders")
                LOTUS_DNS_FORWARDERS=$arg
                MODE=open
                ;;
             "ssl-subject-alt-name")
                LOTUS_SSL_SUBJECT_ALT_NAME=$arg
                MODE=open
                ;;
             "config-file")
                LOTUS_CONFIG_FILE=$arg
                MODE=open
                ;;
             *)
                echo "Invalid mode : $MODE"
                echo $USAGE
                exit 1
                ;;
        esac
   done
else
   echo $USAGE
   exit 1
fi
if [ -f "$LOTUS_CONFIG_FILE" ]; then
    LOTUS_DEPLOYMENT=$(grep "^deployment=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_DOMAIN_DEFAULT=$(grep "^domain=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_ADMIN_DEFAULT=$(grep "^admin=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_ADMIN_PASSWORD_DEFAULT=$(grep "^password=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_PARTNER_HOSTNAME=$(grep "^replication-partner-hostname=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_SITE_NAME=$(grep "^site-name=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_HOSTNAME=$(grep "^hostname=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_FIRST_INSTANCE=$(grep "^first-instance=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_DNS_FORWARDERS=$(grep "^dns-forwarders=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    LOTUS_SSL_SUBJECT_ALT_NAME=$(grep "^ssl-subject-alt-name=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    DISABLE_DNS=$(grep "^disable-dns=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
    DISABLE_STS=$(grep "^disable-sts=" $LOTUS_CONFIG_FILE | $AWK -F"=" '{print $2}')
fi

if [ -z "$LOTUS_HOSTNAME" ]; then
    LOTUS_HOSTNAME=`hostname -f`
fi

# Make sure a partner is passed.
case "$LOTUS_DEPLOYMENT" in

    "standalone")
        echo "Deploying in standalone mode..."
        lotus_first_instance=true;
        ;;
    "partner")
        echo "Deploying in replication partner mode..."
        lotus_first_instance=false;

        if [ "x$LOTUS_PARTNER_HOSTNAME" == "x" ]; then
           echo "Error : A partner hostname must be specified"
           echo $USAGE
           exit 1
        fi
        ;;
    *)
        echo "Invalid deployment type : $LOTUS_DEPLOYMENT"
        echo $USAGE
        exit 1
        ;;
esac

if [[ ! -f /.dockerenv ]]; then

    # Stop all services as a precaution.
    if [ -x /etc/init.d/vmcad ]; then
        /etc/init.d/vmcad stop
    fi

    if [ -x /etc/init.d/vmdnsd ]; then
        /etc/init.d/vmdnsd stop
    fi

    if [ -x /etc/init.d/vmdird ]; then
        /etc/init.d/vmdird stop
    fi

    if [ -x /etc/init.d/vmware-stsd ]; then
        /etc/init.d/vmware-stsd stop
    fi

    if [ -x /etc/init.d/vmware-sts-idmd ]; then
        /etc/init.d/vmware-sts-idmd stop
    fi
    if [ -x /etc/init.d/vmafd ]; then
        /etc/init.d/vmafd stop
    fi

    if [ -x /etc/init.d/vmware-license ]; then
        /etc/init.d/vmware-license stop
    fi

    # Configure syslog-ng
    LINE='@include "lightwave.conf.d"'
    FILE=/etc/syslog-ng/syslog-ng.conf
    if [ -f "$FILE" ]; then
        grep -qs "$LINE" "$FILE"
        if [ "$?" -ne 0 ]; then
            echo "$LINE" >> "$FILE"
            pid=$( pidof syslog-ng )
            if [ -n "$pid" ]; then
                kill -HUP $pid
            fi
        fi
    fi
fi

# Setup vmafd, vmdir and SSO STS server.
JAVA_HOME=/etc/alternatives/jre
JAVA_SEC_PROP=/etc/vmware/java/vmware-override-java.security
VMWARE_DIR=${prefix:-@prefix@}
CLASSPATH=$CLASSPATH:$VMWARE_DIR/jars/*
BIN_DIR=$VMWARE_DIR/bin
SBIN_DIR=$VMWARE_DIR/sbin
LOTUS_DNS_FORWARDERS_ARG=
LOTUS_SSL_SUBJECT_ALT_NAME_ARG=
VMAFD_PARAM_KEY="[HKEY_THIS_MACHINE\\Services\\vmafd\\Parameters]"
VMDIR_KEY="[HKEY_THIS_MACHINE\\Services\\vmdir]"

# Start Likewise services
if [ -z "`pidof lwsmd`" ]; then
    $LW_SBIN_DIR/lwsmd --start-as-daemon --syslog
    RUN_LWSM=1
fi

if [ ! -z "$LOTUS_DNS_FORWARDERS" ]; then
    LOTUS_DNS_FORWARDERS_ARG="--dns-forwarders $LOTUS_DNS_FORWARDERS"
fi

if [ ! -z "$LOTUS_SSL_SUBJECT_ALT_NAME" ]; then
    LOTUS_SSL_SUBJECT_ALT_NAME_ARG="--ssl-subject-alt-name $LOTUS_SSL_SUBJECT_ALT_NAME"
fi

case $DISABLE_DNS in
    1)
        echo "Disabling DNS Listener..."
        $LW_BIN_DIR/lwregshell set_value '[HKEY_THIS_MACHINE\Services\vmdns\Parameters]' EnableDNSProtocol 0
        if [ $? -ne 0 ]; then
            echo "Failed to disable DNS Listener"
            _exit 1
        fi
        ;;
    *)
        ;;
esac

# Check registry if this instance has already been deployed
DOMAIN_STATE=`/opt/likewise/bin/lwregshell list_values "$VMAFD_PARAM_KEY" | \
        grep -i 'DomainState' | sed -r 's/\+?[ \t]*//'`

if [ ! -z "$DOMAIN_STATE" ]; then
    # Get the hex value and convert it to integer
    DOMAIN_STATE=$((`echo $DOMAIN_STATE | cut -d ' ' -f3`))

fi

#check current version
_get_lw_version

# check if it's a promoted container
if [[ "$DOMAIN_STATE" -eq 1 ]] && [[ -f /.dockerenv ]]; then

    #check installed version
    _get_installed_version

    # Check if versions are different
    if [ "$INSTALLED_VERSION" != "$LW_VERSION" ]; then

        # Set vmdir command line arguments to maintenance mode
        VMDIR_ARG=`$LW_BIN_DIR/lwregshell list_values $VMDIR_KEY | \
                grep 'Arguments' | sed 's/+//' | cut -d '"' -f4`

        $LW_BIN_DIR/lwregshell set_value $VMDIR_KEY Arguments "$VMDIR_ARG -m standalone"
        $LW_BIN_DIR/lwsm refresh

        # perform vmdir upgrade
        $BIN_DIR/vmdir_upgrade.sh --password "$LOTUS_ADMIN_PASSWORD_DEFAULT" \
                                  --domainname $LOTUS_DOMAIN_DEFAULT

        if [ $? -ne 0 ]; then
            echo  "Upgrade failed."
            _exit 2
        fi

        # Upgrade successful, reset vmdir cli args
        $LW_BIN_DIR/lwregshell set_value $VMDIR_KEY Arguments "$VMDIR_ARG"
        $LW_BIN_DIR/lwsm refresh
        # take vmdir out of maintenance mode using no-restart method
        $LW_BIN_DIR/lwsm start vmafd
        $BIN_DIR/dir-cli state set --state NORMAL --login $LOTUS_ADMIN_DEFAULT --password "$LOTUS_ADMIN_PASSWORD_DEFAULT"

        # Update installed version on upgrade success
        _set_installed_version

        echo "Upgrade complete."
    else
        echo "Startup complete."
    fi

    _exit 0

else
    if [ $RUN_LWSM ]; then
        $LW_BIN_DIR/lwsm autostart
    fi

    case "$LOTUS_DEPLOYMENT" in
        "standalone")
            $BIN_DIR/ic-promote \
                --domain $LOTUS_DOMAIN_DEFAULT \
                --password "$LOTUS_ADMIN_PASSWORD_DEFAULT" \
                --site $LOTUS_SITE_NAME \
                $LOTUS_SSL_SUBJECT_ALT_NAME_ARG
            ;;
        "partner")
            $BIN_DIR/ic-promote \
                --domain $LOTUS_DOMAIN_DEFAULT \
                --password "$LOTUS_ADMIN_PASSWORD_DEFAULT" \
                --site $LOTUS_SITE_NAME \
                --partner $LOTUS_PARTNER_HOSTNAME \
                $LOTUS_SSL_SUBJECT_ALT_NAME_ARG
            ;;
    esac

    if [ $? -ne 0 ]; then
        echo  "PSC Installation failed."
        _exit 1
    fi

case $DISABLE_STS in
    0)
        echo "Secure Token Service Installation - Started"
	$BIN_DIR/configure-sts --domain $LOTUS_DOMAIN_DEFAULT  --password "$LOTUS_ADMIN_PASSWORD_DEFAULT"
        if [ $? -ne 0 ]; then
            echo "Secure Token Service Installation - Failed"
            _exit 1
        fi
        ;;
    *)
        ;;
esac


  # Set installed version on installation success.
    _set_installed_version

    echo "Setup complete."
    _exit 0
fi
